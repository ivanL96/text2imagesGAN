theme: jekyll-theme-cayman

# This is the default format.
# For more see: https://github.com/mojombo/jekyll/wiki/Permalinks
permalink: /:categories/:year/:month/:day/:title

exclude: ["LICENSE"]
highlighter: rouge

# Themes are encouraged to use these universal variables
# so be sure to set them if your theme uses them.
title : Generating Multiple Objects at Spatially Distinct Locations
description: Summary of our paper published at ICLR 2019
author :
  name : Tobias Hinz
  github : tohinz

production_url : https://tohinz.github.io/multiple-objects-gan/

# Tell Github to use the kramdown markdown interpreter
# (see https://help.github.com/articles/migrating-your-pages-site-from-maruku)
markdown: kramdown

# All Jekyll-Bootstrap specific configurations are namespaced into this hash
#
JB :
  version : 0.3.0

  BASE_PATH : https://tohinz.github.io/multiple-objects-gan/

  # These paths are to the main pages Jekyll-Bootstrap ships with.
  # Some JB helpers refer to these paths; change them here if needed.
  #
  archive_path: nil
  categories_path : nil
  tags_path : nil
  atom_path : nil
  rss_path : nil

  # Settings for comments helper
  # Set 'provider' to the comment provider you want to use.
  # Set 'provider' to false to turn commenting off globally.
  #
  comments :
    provider : false

  # Settings for analytics helper
  # Set 'provider' to the analytics provider you want to use.
  # Set 'provider' to false to turn analytics off globally.
  #
  analytics :
    provider : false

  # Settings for sharing helper.
  # Sharing is for things like tweet, plusone, like, reddit buttons etc.
  # Set 'provider' to the sharing provider you want to use.
  # Set 'provider' to false to turn sharing off globally.
  #
  sharing :
    provider : false

  # Settings for all other include helpers can be defined by creating
  # a hash with key named for the given helper. ex:
  #
  #   pages_list :
  #     provider : "custom"
  #
  # Setting any helper's provider to 'custom' will bypass the helper code
  # and include your custom code. Your custom file must be defined at:
  #   ./_includes/custom/[HELPER]
  # where [HELPER] is the name of the helper you are overriding.
